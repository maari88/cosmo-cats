plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.cosmocats'
version = '0.0.1-SNAPSHOT'
description = 'marketplace'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

// ---- Версії залежностей (оголошені тут) ----
ext {
    mapstructVersion = '1.5.5.Final'
    lombokVersion = '1.18.28'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // MapStruct (runtime API) + annotation processor
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    // Lombok (compileOnly + annotation processor)
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // H2 DB for dev/testing
    runtimeOnly 'com.h2database:h2'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // OpenAPI UI (optional, корисно для перегляду контракту)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Додаємо аргумент компілятору для mapstruct (за бажанням)
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    // Додаємо щоб MapStruct за замовчуванням використовував Spring компонентну модель (не обов'язково, якщо в коді явно вказано)
    options.compilerArgs += ['-Amapstruct.defaultComponentModel=spring']
}

// use JUnit Platform for tests
tasks.named('test') {
    useJUnitPlatform()
}

